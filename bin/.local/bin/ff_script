#!/usr/bin/env bash

MAIN_SESSION="kc"

# /**/ Launch fzf Vjto iterate through list of projects
selected=$((([ -d ~/personal/courses ] && find ~/personal/courses -maxdepth 1 -type d || command) &&

([ -d ~/personal ] && find ~/personal -maxdepth 1 -type d -not -path "*/courses/*" || command) &&
([ -d ~/work ] && find ~/work -maxdepth 2 -type d || command ) &&
([ -d ~/.dotfiles ] && find ~/.dotfiles -maxdepth 3 -type d -not -path "*/.git/*" || command )) | sort | uniq | fzf)

if [[ -z $selected ]]; then
  exit 0
fi

selected_name=$(basename "$selected" | tr . _)

# If Not in a Tmux Session, Create a New One
# tmux attach -t $MAIN_SESSION:$selected_name || tmux new -s $MAIN_SESSION -n $selected_name

active_window=$(tmux has-session -t $MAIN_SESSION:$selected_name 2>&1)
active_session=$(tmux has-session -t $MAIN_SESSION 2>&1)

# If currently outside TMUX
if [ -z $TMUX ]; then

  if [ "$(echo $active_session | grep -c 'no server')" -eq "1" ]; then
    tmux new-session -d -s $MAIN_SESSION -n $selected_name
    tmux send-keys -t $MAIN_SESSION:$selected_name "cd $selected" C-m
    tmux send-keys -t $MAIN_SESSION:$selected_name "clear" C-m
    tmux attach -t $MAIN_SESSION:$selected_name
  elif [ "$(echo $active_window | grep -c 't find')" -eq "0" ]; then
    tmux attach -t $MAIN_SESSION:$selected_name
  else
    if [ "$(echo $active_session | grep -c 't find')" -eq "0" ]; then
      true
    else
      tmux new-session -d -s $MAIN_SESSION >/dev/null
    fi
    tmux new-window -t $MAIN_SESSION -n $selected_name
    tmux attach -t $MAIN_SESSION:$selected_name
    tmux send-keys -t $MAIN_SESSION:$selected_name "cd $selected" C-m
    tmux send-keys -t $MAIN_SESSION:$selected_name "clear" C-m
  fi
else
  if [ "$(echo $active_window | grep -c 't find')" -eq "0" ]; then
    tmux select-window -t $selected_name
  else
    tmux new-window -t $MAIN_SESSION -n $selected_name
    tmux select-window -t $selected_name
    tmux send-keys -t $MAIN_SESSION:$selected_name "cd $selected" C-m
    tmux send-keys -t $MAIN_SESSION:$selected_name "clear" C-m
  fi
fi

